import{_ as s,c as e,o as i,ak as n}from"./chunks/framework.CK5UQgAU.js";const k=JSON.parse('{"title":"构建与预览","description":"","frontmatter":{},"headers":[],"relativePath":"guide/build.md","filePath":"guide/build.md"}'),t={name:"guide/build.md"};function l(p,a,d,o,c,h){return i(),e("div",null,[...a[0]||(a[0]=[n(`<div style="display:none;" hidden="true" aria-hidden="true">Are you an LLM? You can read better optimized documentation at /guide/build.md for this page in Markdown format</div><h1 id="构建与预览" tabindex="-1">构建与预览 <a class="header-anchor" href="#构建与预览" aria-label="Permalink to &quot;构建与预览&quot;">​</a></h1><h2 id="构建" tabindex="-1">构建 <a class="header-anchor" href="#构建" aria-label="Permalink to &quot;构建&quot;">​</a></h2><p>项目开发完成之后，可以执行 <code>pnpm run build</code> 命令进行构建，构建打包成功之后，会在根目录生成 dist 文件夹，里面就是构建打包好的文件。</p><p>如果是需要构建测试环境，则执行 <code>pnpm run build:test</code> 命令，对应会在根目录生成 dist-test 文件夹。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>如果最终访问地址为域名非根节点，如 <code>https://www.example.com/app</code>，则需要在 <code>vite.config.ts</code> 中设置 <code>base</code> 选项为 <code>/app/</code>，否则会出现资源引用错误。</p></div><h2 id="预览" tabindex="-1">预览 <a class="header-anchor" href="#预览" aria-label="Permalink to &quot;预览&quot;">​</a></h2><p>生成好的 dist 文件夹一般需要部署至服务器才算部署发布成功，但为了保证构建出来的文件能正常运行，开发者通常希望能在本地先预览一下，可执行 <code>pnpm run serve</code> 或 <code>pnpm run serve:test</code> 命令预览不同环境构建出的文件夹。</p><h2 id="压缩" tabindex="-1">压缩 <a class="header-anchor" href="#压缩" aria-label="Permalink to &quot;压缩&quot;">​</a></h2><p>在环境配置文件里设置 <code>VITE_BUILD_COMPRESS</code> 即可在构建时生成 <code>.gz</code> 或 <code>.br</code> 文件。</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 单独开启 gzip</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">VITE_BUILD_COMPRESS = gzip</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 单独开启 brotli ，brotli 是比 gzip 压缩率更高的算法</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">VITE_BUILD_COMPRESS = brotli</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 或者也可以都开启，两者可以共存</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">VITE_BUILD_COMPRESS = gzip,brotli</span></span></code></pre></div><p>两者均需要 nginx 安装指定模块并开启后才会生效。</p><h2 id="生成存档" tabindex="-1">生成存档 <a class="header-anchor" href="#生成存档" aria-label="Permalink to &quot;生成存档&quot;">​</a></h2><p>在环境配置文件里设置 <code>VITE_BUILD_ARCHIVE</code> 即可在构建完后成生成 <code>.zip</code> 或 <code>.tar.gz</code> 文件。</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 生成 zip</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">VITE_BUILD_ARCHIVE = zip</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 生成 tar.gz</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">VITE_BUILD_ARCHIVE = tar</span></span></code></pre></div><h2 id="禁用浏览器开发者工具" tabindex="-1">禁用浏览器开发者工具 <a class="header-anchor" href="#禁用浏览器开发者工具" aria-label="Permalink to &quot;禁用浏览器开发者工具&quot;">​</a></h2><p>在环境配置文件里设置 <code>VITE_APP_DISABLE_DEVTOOL</code> 即可在构建后禁用浏览器开发者工具。</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 禁用开发者工具</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">VITE_APP_DISABLE_DEVTOOL = true</span></span></code></pre></div><h2 id="其它设置" tabindex="-1">其它设置 <a class="header-anchor" href="#其它设置" aria-label="Permalink to &quot;其它设置&quot;">​</a></h2><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 是否在打包时生成 sourcemap</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">VITE_BUILD_SOURCEMAP = true</span></span></code></pre></div>`,20)])])}const u=s(t,[["render",l]]);export{k as __pageData,u as default};
