import{_ as l,C as p,c as h,o as k,ak as t,j as i,a,G as n}from"./chunks/framework.CK5UQgAU.js";const x=JSON.parse('{"title":"常用 API","description":"","frontmatter":{},"headers":[],"relativePath":"guide/api.md","filePath":"guide/api.md"}'),d={name:"guide/api.md"},r={id:"设置自定义标题",tabindex:"-1"},o={id:"重置自定义标题",tabindex:"-1"},g={id:"最大化",tabindex:"-1"},E={id:"打开新标签页",tabindex:"-1"},c={id:"后退标签页",tabindex:"-1"},y={id:"替换当前标签页",tabindex:"-1"},u={id:"关闭当前标签页",tabindex:"-1"},b={id:"日期",tabindex:"-1"};function F(C,s,v,m,B,A){const e=p("Badge");return k(),h("div",null,[s[28]||(s[28]=t(`<div style="display:none;" hidden="true" aria-hidden="true">Are you an LLM? You can read better optimized documentation at /guide/api.md for this page in Markdown format</div><h1 id="常用-api" tabindex="-1">常用 API <a class="header-anchor" href="#常用-api" aria-label="Permalink to &quot;常用 API&quot;">​</a></h1><h2 id="接口请求" tabindex="-1">接口请求 <a class="header-anchor" href="#接口请求" aria-label="Permalink to &quot;接口请求&quot;">​</a></h2><p>详细可阅读《<a href="./axios.html#接口请求">与服务端交互 - 接口请求</a>》。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> api </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@/api&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">api.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">api.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">post</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><h2 id="鉴权" tabindex="-1">鉴权 <a class="header-anchor" href="#鉴权" aria-label="Permalink to &quot;鉴权&quot;">​</a></h2><p>详细可阅读《<a href="./permission.html#鉴权函数">权限 - 鉴权函数</a>》。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">auth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">authAll</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useAuth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">auth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">authAll</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><h2 id="主导航" tabindex="-1">主导航 <a class="header-anchor" href="#主导航" aria-label="Permalink to &quot;主导航&quot;">​</a></h2><h3 id="切换" tabindex="-1">切换 <a class="header-anchor" href="#切换" aria-label="Permalink to &quot;切换&quot;">​</a></h3><p>切换主导航，<code>index</code> 为主导航序列数。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">switchTo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useMenu</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">switchTo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(index)</span></span></code></pre></div><h2 id="主页面" tabindex="-1">主页面 <a class="header-anchor" href="#主页面" aria-label="Permalink to &quot;主页面&quot;">​</a></h2><h3 id="刷新" tabindex="-1">刷新 <a class="header-anchor" href="#刷新" aria-label="Permalink to &quot;刷新&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">reload</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useMainPage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">reload</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div>`,15)),i("h3",r,[s[0]||(s[0]=a("设置自定义标题 ",-1)),n(e,{type:"pro",text:"专业版"}),s[1]||(s[1]=a()),s[2]||(s[2]=i("a",{class:"header-anchor",href:"#设置自定义标题","aria-label":'Permalink to "设置自定义标题 <Badge type="pro" text="专业版" />"'},"​",-1))]),s[29]||(s[29]=t(`<div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">setCustomTitle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useMainPage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setCustomTitle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(title)</span></span></code></pre></div>`,1)),i("h3",o,[s[3]||(s[3]=a("重置自定义标题 ",-1)),n(e,{type:"pro",text:"专业版"}),s[4]||(s[4]=a()),s[5]||(s[5]=i("a",{class:"header-anchor",href:"#重置自定义标题","aria-label":'Permalink to "重置自定义标题 <Badge type="pro" text="专业版" />"'},"​",-1))]),s[30]||(s[30]=t(`<div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">resetCustomTitle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useMainPage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">resetCustomTitle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div>`,1)),i("h3",g,[s[6]||(s[6]=a("最大化 ",-1)),n(e,{type:"pro",text:"专业版"}),s[7]||(s[7]=a()),s[8]||(s[8]=i("a",{class:"header-anchor",href:"#最大化","aria-label":'Permalink to "最大化 <Badge type="pro" text="专业版" />"'},"​",-1))]),s[31]||(s[31]=t(`<div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">maximize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useMainPage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// status: true / false</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">maximize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(status)</span></span></code></pre></div><h2 id="标签栏" tabindex="-1">标签栏 <a class="header-anchor" href="#标签栏" aria-label="Permalink to &quot;标签栏&quot;">​</a></h2><h3 id="获取当前标签页-tabid" tabindex="-1">获取当前标签页 tabId <a class="header-anchor" href="#获取当前标签页-tabid" aria-label="Permalink to &quot;获取当前标签页 tabId&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">getId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useTabbar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div>`,4)),i("h3",E,[s[9]||(s[9]=i("s",null,"打开新标签页",-1)),s[10]||(s[10]=a()),n(e,{type:"danger",text:"v5.2.0 弃用"}),s[11]||(s[11]=a()),s[12]||(s[12]=i("a",{class:"header-anchor",href:"#打开新标签页","aria-label":'Permalink to "~~打开新标签页~~ <Badge type="danger" text="v5.2.0 弃用" />"'},"​",-1))]),s[32]||(s[32]=t(`<div class="danger custom-block"><p class="custom-block-title">注意</p><p>该方法已弃用，直接使用 <code>router.push(to)</code> 即可达到相同效果。</p></div><p>该方法接收一个 <code>to</code> 参数，该参数与 <code>router.push(to)</code> 一致，点击阅读<a href="https://router.vuejs.org/zh/api/interfaces/Router.html#Methods-push" target="_blank" rel="noreferrer">参数说明</a>。</p><p>通过该方式跳转页面，新增的标签页会插入到当前标签页后面，而直接通过路由跳转，新增的标签页会插入到所有标签页的最后。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">open</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useTabbar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">open</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(to)</span></span></code></pre></div>`,4)),i("h3",c,[s[13]||(s[13]=i("s",null,"后退标签页",-1)),s[14]||(s[14]=a()),n(e,{type:"danger",text:"v5.2.0 弃用"}),s[15]||(s[15]=a()),s[16]||(s[16]=i("a",{class:"header-anchor",href:"#后退标签页","aria-label":'Permalink to "~~后退标签页~~ <Badge type="danger" text="v5.2.0 弃用" />"'},"​",-1))]),s[33]||(s[33]=t(`<div class="danger custom-block"><p class="custom-block-title">注意</p><p>该方法已弃用，直接使用 <code>router.go(delta)</code> 即可达到相同效果。</p></div><p>该方法接收一个 <code>delta</code> 参数，该参数与 <code>router.go(delta)</code> 一致，点击阅读<a href="https://router.vuejs.org/zh/api/interfaces/Router.html#Methods-go" target="_blank" rel="noreferrer">参数说明</a>。</p><p>通过该方式后退页面，可以同时关闭当前标签页，而直接通过路由后退，当前标签页会被保留。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">go</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useTabbar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(delta)</span></span></code></pre></div>`,4)),i("h3",y,[s[17]||(s[17]=i("s",null,"替换当前标签页",-1)),s[18]||(s[18]=a()),n(e,{type:"danger",text:"v5.2.0 弃用"}),s[19]||(s[19]=a()),s[20]||(s[20]=i("a",{class:"header-anchor",href:"#替换当前标签页","aria-label":'Permalink to "~~替换当前标签页~~ <Badge type="danger" text="v5.2.0 弃用" />"'},"​",-1))]),s[34]||(s[34]=t(`<div class="danger custom-block"><p class="custom-block-title">注意</p><p>该方法已弃用，直接使用 <code>router.replace(to)</code> 即可达到相同效果。</p></div><p>该方法接收一个 <code>to</code> 参数，该参数与 <code>router.replace(to)</code> 一致，点击阅读<a href="https://router.vuejs.org/zh/api/interfaces/Router.html#Methods-replace" target="_blank" rel="noreferrer">参数说明</a>。</p><p>通过该方式替换当前标签页，可以同时关闭当前标签页，而直接通过路由替换，当前标签页会被保留。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">replace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useTabbar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">replace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(to)</span></span></code></pre></div>`,4)),i("h3",u,[s[21]||(s[21]=i("s",null,"关闭当前标签页",-1)),s[22]||(s[22]=a()),n(e,{type:"danger",text:"v5.5.0 弃用"}),s[23]||(s[23]=a()),s[24]||(s[24]=i("a",{class:"header-anchor",href:"#关闭当前标签页","aria-label":'Permalink to "~~关闭当前标签页~~ <Badge type="danger" text="v5.5.0 弃用" />"'},"​",-1))]),s[35]||(s[35]=t(`<div class="danger custom-block"><p class="custom-block-title">注意</p><p>该方法已弃用，直接使用 <code>router.close(to)</code> 即可达到相同效果。</p><p>注意 <code>close</code> 方法为框架扩展的 API ，并非 vue-router 原生提供。</p></div><p>该方法接收一个 <code>to</code> 参数，该参数与 <code>router.push(to)</code> 一致，点击阅读<a href="https://router.vuejs.org/zh/api/interfaces/Router.html#Methods-push" target="_blank" rel="noreferrer">参数说明</a>。</p><p>通过该方式跳转页面，可以同时关闭当前标签页，而直接通过路由跳转，当前标签页会被保留。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">close</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useTabbar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">close</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(to)</span></span></code></pre></div><h3 id="关闭指定标签页" tabindex="-1">关闭指定标签页 <a class="header-anchor" href="#关闭指定标签页" aria-label="Permalink to &quot;关闭指定标签页&quot;">​</a></h3><p>该方法接收一个 <code>tabId</code> 参数，如果不传则默认为当前页的 <code>tabId</code> 。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">closeById</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useTabbar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">closeById</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tabId)</span></span></code></pre></div><h3 id="关闭两侧标签页" tabindex="-1">关闭两侧标签页 <a class="header-anchor" href="#关闭两侧标签页" aria-label="Permalink to &quot;关闭两侧标签页&quot;">​</a></h3><p>该方法接收一个 <code>tabId</code> 参数，如果不传则默认为当前页的 <code>tabId</code> 。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">closeOtherSide</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useTabbar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">closeOtherSide</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tabId)</span></span></code></pre></div><h3 id="关闭左侧标签页" tabindex="-1">关闭左侧标签页 <a class="header-anchor" href="#关闭左侧标签页" aria-label="Permalink to &quot;关闭左侧标签页&quot;">​</a></h3><p>该方法接收一个 <code>tabId</code> 参数，如果不传则默认为当前页的 <code>tabId</code> 。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">closeLeftSide</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useTabbar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">closeLeftSide</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tabId)</span></span></code></pre></div><h3 id="关闭右侧标签页" tabindex="-1">关闭右侧标签页 <a class="header-anchor" href="#关闭右侧标签页" aria-label="Permalink to &quot;关闭右侧标签页&quot;">​</a></h3><p>该方法接收一个 <code>tabId</code> 参数，如果不传则默认为当前页的 <code>tabId</code> 。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">closeRightSide</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useTabbar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">closeRightSide</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tabId)</span></span></code></pre></div><h3 id="校验指定标签两侧是否有可关闭的标签" tabindex="-1">校验指定标签两侧是否有可关闭的标签 <a class="header-anchor" href="#校验指定标签两侧是否有可关闭的标签" aria-label="Permalink to &quot;校验指定标签两侧是否有可关闭的标签&quot;">​</a></h3><p>该方法接收一个 <code>tabId</code> 参数，如果不传则默认为当前页的 <code>tabId</code> 。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">checkCloseOtherSide</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useTabbar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">checkCloseOtherSide</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tabId)</span></span></code></pre></div><h3 id="校验指定标签左侧是否有可关闭的标签" tabindex="-1">校验指定标签左侧是否有可关闭的标签 <a class="header-anchor" href="#校验指定标签左侧是否有可关闭的标签" aria-label="Permalink to &quot;校验指定标签左侧是否有可关闭的标签&quot;">​</a></h3><p>该方法接收一个 <code>tabId</code> 参数，如果不传则默认为当前页的 <code>tabId</code> 。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">checkCloseLeftSide</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useTabbar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">checkCloseLeftSide</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tabId)</span></span></code></pre></div><h3 id="校验指定标签右侧是否有可关闭的标签" tabindex="-1">校验指定标签右侧是否有可关闭的标签 <a class="header-anchor" href="#校验指定标签右侧是否有可关闭的标签" aria-label="Permalink to &quot;校验指定标签右侧是否有可关闭的标签&quot;">​</a></h3><p>该方法接收一个 <code>tabId</code> 参数，如果不传则默认为当前页的 <code>tabId</code> 。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">checkCloseRightSide</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useTabbar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">checkCloseRightSide</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tabId)</span></span></code></pre></div><h2 id="事件总线" tabindex="-1">事件总线 <a class="header-anchor" href="#事件总线" aria-label="Permalink to &quot;事件总线&quot;">​</a></h2><p>基于 <a href="https://github.com/developit/mitt" target="_blank" rel="noreferrer">mitt</a> 简单封装，使用方法请查阅官方文档。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> eventBus </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@/utils/eventBus&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">eventBus.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">eventBus.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">emit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">eventBus.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">off</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div>`,28)),i("h2",b,[s[25]||(s[25]=a("日期 ",-1)),n(e,{type:"pro",text:"专业版"}),s[26]||(s[26]=a()),s[27]||(s[27]=i("a",{class:"header-anchor",href:"#日期","aria-label":'Permalink to "日期 <Badge type="pro" text="专业版" />"'},"​",-1))]),s[36]||(s[36]=t(`<p>基于 <a href="https://day.js.org/zh-CN/" target="_blank" rel="noreferrer">dayjs</a> 简单封装，使用方法请查阅官方文档。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dayjs </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@/utils/dayjs&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dayjs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div>`,2))])}const _=l(d,[["render",F]]);export{x as __pageData,_ as default};
